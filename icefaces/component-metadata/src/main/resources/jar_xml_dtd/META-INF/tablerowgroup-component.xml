<?xml version="1.0" encoding="UTF-8"?>
<component>
  <description>
    Render a group of rows for a table.
  </description>
  <display-name>Row Group</display-name>
  <component-type>com.sun.rave.web.ui.TableRowGroup</component-type>

  <property>
    <description><![CDATA[
Set the <code>aboveColumnFooter</code> attribute to true to display the group 
footer bar above the column footers bar. The default is to display the group 
footer below the column footers.
    ]]></description>
    <display-name>Is Above Column Footer</display-name>
    <property-name>aboveColumnFooter</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
          Display the group footer bar above the column footer bar
      </short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Set the <code>aboveColumnHeader</code> attribute to true to display the group 
header bar above the column headers bar. The default is to display the group 
header below the column headers.
    ]]></description>
    <display-name>Is Above Column Header</display-name>
    <property-name>aboveColumnHeader</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Display the group header bar above the column headers bar
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the collapsed attribute to initially render the group as collapsed, so that 
the data rows are hidden and only the header row is visible. The default is to 
show the group expanded.
    ]]></description>
    <display-name>Is Collapsed</display-name>
    <property-name>collapsed</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Initially display the row group collapsed so that only the header
                    row is visible
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
The text to be displayed when the table does not contain data. The text is 
displayed left-aligned in a single row that contains one cell that spans all 
columns. The <code>emptyDataMsg</code> text might be something similar to "No 
items found." If users can add items to the table, the message might include 
instructions, such as "This table contains no files. To add a file to monitor, 
click the New button."
    ]]></description>
    <display-name>Empty Data Message</display-name>
    <property-name>emptyDataMsg</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
The text to be displayed when the table does not contain data
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Extra HTML code to be appended to the <code>&lt;tr&gt;</code> HTML element that 
is rendered for the group footer. Use only code that is valid in an HTML 
<code>&lt;td&gt;</code> element. The code you specify is inserted in the HTML 
element, and is not checked for validity. For example, you might set this 
attribute to <code>"nowrap=`nowrap'"</code>.
    ]]></description>
    <display-name>Extra Footer HTML</display-name>
    <property-name>extraFooterHtml</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
HTML that is appended to the TR element for the group footer
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Extra HTML code to be appended to the <code>&lt;tr&gt;</code> HTML element that 
is rendered for the group header. Use only code that is valid in an HTML 
<code>&lt;td&gt;</code> element. The code you specify is inserted in the HTML 
element, and is not checked for validity. For example, you might set this 
attribute to <code>"nowrap=`nowrap'"</code>.
    ]]></description>
    <display-name>Extra Header HTML</display-name>
    <property-name>extraHeaderHtml</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
HTML that is appended to the TR element for the group header
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the <code>first</code> attribute to specify which row should be the first 
to be displayed. This value is used only when the table is paginated. By 
default, the first row (0) is displayed first. The value of this property is 
maintained as part of the table's state, and the value is updated when the user 
clicks on buttons to page through the table.
    ]]></description>
    <display-name>First Row</display-name>
    <property-name>first</property-name>
    <property-class>int</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <default-value>0</default-value>
      <short-description>
Specify which row should be displayed first (only when the table
                    is paginated)
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
The text to be displayed in the group footer.
    ]]></description>
    <display-name>Footer Text</display-name>
    <property-name>footerText</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the <code>groupToggleButton</code> attribute to display a button in the 
group header to allow users to collapse and expand the group of rows.
    ]]></description>
    <display-name>Show Group Toggle Button</display-name>
    <property-name>groupToggleButton</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
        Display a button in the group header to allow users to collapse
        and expand the group of rows
      </short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
The text to be displayed in the group header.
    ]]></description>
    <display-name>header Text</display-name>
    <property-name>headerText</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the <code>multipleColumnFooters</code> attribute when the 
<code>ui:tableRowGroup</code> contains nested <code>ui:tableColumn</code> tags, 
and you want the footers of all the <code>ui:tableColumn</code> tags to be 
shown. The default is to show the footers of only the innermost level of nested 
<code>ui:tableColumn</code> tags.
    ]]></description>
    <display-name>Show Multiple Column Footers</display-name>
    <property-name>multipleColumnFooters</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
        Show all the footers for columns that are nested in the table row group
      </short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the <code>multipleTableColumnFooters</code> attribute when the 
<code>ui:tableRowGroup</code> contains nested <code>ui:tableColumn</code> tags, 
and you want the table footers of all the <code>ui:tableColumn</code> tags to 
be shown. The default is to show the table footers of only the innermost level 
of nested <code>ui:tableColumn</code> tags.
    ]]></description>
    <display-name>Show Nested Table Column Footers</display-name>
    <property-name>multipleTableColumnFooters</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
        Show all the footers for columns that are nested in the table
      </short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
The number of rows per page</span> to be displayed for a paginated table. The 
default value is 25 per page.
    ]]></description>
    <display-name>Paginated rows</display-name>
    <property-name>rows</property-name>
    <property-class>int</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <default-value>25</default-value>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Flag indicating that the current row is selected. If the value is set to true, 
the row will appear highlighted.
    ]]></description>
    <display-name>Is Selected</display-name>
    <property-name>selected</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the <code>selectMultipleToggleButton</code> attribute to display a button 
in the group header to allow users to select all rows of the group at once. 
The button toggles a column of checkboxes using the id that is given to the 
<code>selectId</code> attribute of the <code>ui:tableColumn</code> tag.
    ]]></description>
    <display-name>Show Select Multiple Button</display-name>
    <property-name>selectMultipleToggleButton</property-name>
    <property-class>boolean</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Display a button in the group header to toggle selection of all
                    rows in a group
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
The <code>sourceData</code> attribute is used to specify the data source to 
populate the table. The value of the <code>sourceData</code> attribute must be 
a JavaServer Faces EL expression that resolves to a backing bean of type 
<code>com.sun.data.provider.TableDataProvider</code>.
<br><br>
The sourceData property is referenced during multiple phases of the JavaServer 
Faces life cycle while iterating over the rows. The TableDataProvider object 
that is bound to this attribute should be cached so that the object is not 
created more often than needed.
    ]]></description>
    <display-name>Source Data</display-name>
    <property-name>sourceData</property-name>
    <property-class>com.sun.data.provider.TableDataProvider</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Specify the data source for the table using a JavaServer Faces EL expression
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the <code>sourceVar</code> attribute to specify the name of the 
request-scope attribute under which model data for the current row will be 
exposed when iterating. During iterative processing over the rows of data in 
the data provider, the TableDataProvider for the current row is exposed as a 
request attribute under the key specified by this property. Note: This 
value must be unique for each table in the JSP page.
    ]]></description>
    <display-name>Source Variable</display-name>
    <property-name>sourceVar</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Name of a request attribute that can be used to access data in
                    the current model row
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[
Use the <code>styleClasses</code> attribute to specify a list of CSS style 
classes to apply to the rows of the group. You can apply all the styles in the 
list to each row by separating the class names with commas. Each row looks the 
same when commas are used to delimit the styles. You can apply alternating 
styles to individual rows by separating the style class names with spaces. You 
can create a pattern of shading alternate rows, for example, to improve 
readability of the table. For example, if the list has two elements, the first 
style class in the list is applied to the first row, the second class to the 
second row, the first class to the third row, the second class to the fourth 
row, etc. The tableRowGroup component iterates through the list of styles and 
repeats from the beginning until a style is applied to each row. 
    ]]></description>
    <display-name>CSS Style Class(es)</display-name>
    <property-name>styleClasses</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Specify a list of CSS style classes to apply to the rows of the
                    group. You can apply all the styles in the list to each row by separating the
                    class names with commas.
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[        
The <code>tableDataFilter</code> attribute is used to define filter critera and 
mechanism for filtering the contents of a TableDataProvider. The value of the 
<code>tableDataFilter</code> attribute must be a JavaServer Faces EL expression 
that resolves to a backing bean of type 
<code>com.sun.data.provider.TableDataFilter</code>.
    ]]></description>
    <display-name>Table Data Filter</display-name>
    <property-name>tableDataFilter</property-name>
    <property-class>com.sun.data.provider.TableDataFilter</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Specify a filter bean (com.sun.data.provider.TableDataFilter) for
                    the contents of the table using a JavaServer Faces EL expression
</short-description>
    </property-extension>
  </property>

  <property>
    <description><![CDATA[        
The <code>tableDataSorter</code> attribute is used to define sort critera and 
the mechanism for sorting the contents of a TableDataProvider. The value of the 
<code>tableDataSorter</code> attribute must be a JavaServer Faces EL expression 
that resolves to a backing bean of type 
<code>com.sun.data.provider.TableDataSorter</code>.
    ]]></description>
    <display-name>Table Data Sorter</display-name>
    <property-name>tableDataSorter</property-name>
    <property-class>com.sun.data.provider.TableDataSorter</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
Specify a sort bean (com.sun.data.provider.TableDataSorter) for
                    the contents of the table using a JavaServer Faces EL expression
</short-description>
    </property-extension>
  </property>

  &onClickXXX-props;
  &onKeyXXX-props;
  &onMouseXXX-props;
  &toolTip-props;
  &visible-props;
  &tr-props;

  <component-extension>
    <base-component-type>com.sun.faces.Component</base-component-type>
    <component-family>com.sun.rave.web.ui.TableRowGroup</component-family>
    <renderer-type>com.sun.rave.web.ui.TableRowGroup</renderer-type>
  </component-extension>

</component>
