<?xml version="1.0" encoding="UTF-8"?>
<renderer>
  <description><![CDATA[

Use the <code>ui:hiddenField</code> tag to create a hidden field,
    which is present in the HTML, but not displayed to the user.
    Hidden fields are useful for saving state information.  

<h3>HTML Elements and Layout</h3> 

<p>The hiddenField component renders an XHTML <code>&lt;input
    type="hidden"&gt;</code> element. </p> 

    <h3>Configuring the <code>ui:hiddenField</code> Tag</h3>

<p>Use the <code>value</code> attribute to associate
the component with a model object that represents the current value,
by setting the attribute's value to a JavaServer Faces EL expression
    that corresponds to a property of a backing bean.</p>

    <h3>Facets</h3>

    <p>This component has no facets.</p> 

    <h3>Theme Identifiers</h3>

    <p>This component does not use any style classes from the theme.</p> 

    <h3>Client-side JavaScript functions</h3>

    <p>In all the functions below, <code>&lt;id&gt;</code> should be
    the generated id of the HiddenField component. 

    <table cellpadding="2" cellspacing="2" border="1" 
           style="text-align: left; width: 100%;">
    <tbody>
    <tr>
    <td style="vertical-align">
    <code>field_setDisabled(&lt;id&gt;, &lt;disabled&gt;)</code>
    </td>
    <td style="vertical-align: top">
    Enable/disable the field. Set <code>&lt;disabled&gt;</code>
    to true to disable the component, or false to enable it.
    </td>
    </tr>
    <tr>
    <td style="vertical-align: top">
    <code>field_setValue(&lt;id&gt;, &lt;newValue&gt;)</code>
    </td>
    <td style="vertical-align: top">
    Set the value of the field to <code>&lt;newValue&gt;</code>.
    </td>
    </tr>
    <tr>
      <td style="vertical-align: top">
    <code>field_getValue(&lt;id&gt;)</code>
  </td>
    <td style="vertical-align: top">Get the value of the field.</td>
    </tr>
    <tr>
      <td style="vertical-align: top">
    <code>field_getInputElement(&lt;id&gt;)</code></td>
    <td style="vertical-align: top">
    Get hold of a reference to the input element rendered by this
    component.
    </td>
    </tr>
  </tbody>
</table>

    <h3>Examples</h3>

<p>This example uses a backing bean <code>FieldTest</code> with a
property <code>counter</code>. The property is an <code>int</code> but
    it is not necessary to specify a converter since the default
    JavaServer Faces converter will be used. The value of the hidden
    field may be updated through a JavaScript.  The tag generates an
    HTML input element.</p>
<pre>
&lt;ui:hiddenField id="counter" value="#{FieldTest.counter}"/&gt;
</pre>
      ]]></description>

  <component-family>com.sun.rave.web.ui.HiddenField</component-family>

  <renderer-type>com.sun.rave.web.ui.HiddenField</renderer-type>

  <attribute>
    <description>
      The current value of this component, which can be a text string or a
      JavaServer Faces EL expression that evaluates to a backing bean
      or to a property of a backing bean.
</description>
    <attribute-name>value</attribute-name>
  </attribute>

  <attribute>
    <description><![CDATA[The binding attribute is used to configure the
      component through Java code. This approach is intended for
      advanced uses, when the tag attributes cannot provide the
      desired output. The value of the binding attribute must be a
      JavaServer Faces EL expression that resolves to a backing bean,
      or to a backing bean property of type 
      <code>com.sun.rave.web.ui.component.HiddenField</code>. ]]>
        </description>
    <attribute-name>binding</attribute-name>
  </attribute>


  <attribute>
    <description>
Flag indicating that the hidden field should not send its value to the
      server. </description>
    <attribute-name>disabled</attribute-name>
  </attribute>

  <attribute>
    <description>
      Use the rendered attribute to indicate whether the HTML code for
      the component should be included in the rendered HTML page. If
      set to false, the rendered HTML page does not include the HTML
      for the component. If the component is not rendered, it is also
      not processed on any subsequent form submission. 
        </description>
    <attribute-name>rendered</attribute-name>
  </attribute>

  <attribute>
    <description>Flag indicating that event handling for this
      component should be handled immediately (in Apply Request Values
      phase) rather than waiting until Invoke Application phase. 
        </description>
    <attribute-name>immediate</attribute-name>
  </attribute>

  <attribute>
    <description>
Position of this element in the tabbing order for the current
      document. The tabbing order determines the sequence in which
      elements receive focus when the tab key is pressed. The tabIndex
      value must be an integer between 0 and 32767.
 
        </description>
    <attribute-name>tabIndex</attribute-name>
  </attribute>


  <attribute>
    <attribute-name>required</attribute-name>
    <attribute-extension>
      <is-hidden>true</is-hidden>
      <tag-attribute>false</tag-attribute>
    </attribute-extension>
  </attribute>


<!--
      &visible-attrs;
-->
      &converter-props;
      &validator-props;

  <renderer-extension>
    <tag-name>hiddenField</tag-name>
    <taglib-prefix>ui</taglib-prefix>
    <taglib-uri>http://www.sun.com/web/ui</taglib-uri>
  </renderer-extension>

</renderer>
