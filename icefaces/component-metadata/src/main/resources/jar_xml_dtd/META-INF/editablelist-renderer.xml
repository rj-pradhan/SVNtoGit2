<?xml version="1.0" encoding="UTF-8"?>
<renderer>
  <description><![CDATA[
 
    <h4>About this tag</h4>

    <p>This tag renders an EditableList component. Use this component
    when web application users need to create and modify a list of
    strings. The application user can add new strings by typing them
    into the textfield and clicking the "Add" button, and remove them
    by selecting one or more items from the list and clicking the
    "Remove" button.</p>  

    <h4>Configuring the <code>ui:editableList</code> tag</h4>

    <p> Use the <code>list</code> attribute to bind the component
    to a model. The value must be an EL expression that corresponds to
    a managed bean or a property of a managed bean, and it must
    evaluate to an array of  <code>java.lang.String</code>. 
    </p> 

    <p>To set the label of the textfield, use the
    <code>fieldLabel</code> attribute. To set the label of the
    textfield, use the <code>listLabel</code> attribute. To validate
    new items, use the <code>fieldValidator</code> attribute; to
    validate the contents of the list once the user has finished
    adding and removing items, specify a <code>labelValidator</code>.</p> 

    <h4>Facets</h4>

    <ul>
    <li><code>fieldLabel</code>: use this facet to specify a custom 
    component for the textfield label.</li>
    <li><code>listLabel</code>: use this facet to specify a custom 
    component for the textfield label.</li>
    <li><code>field</code>: use this facet to specify a custom 
    component for the textfield.</li>
     <li><code>addButton</code>: use this facet to specify a custom 
    component for the add button.</li>
     <li><code>removeButton</code>: use this facet to specify a custom 
    component for the remove button.</li>
    <li><code>search</code>: use this facet to specify a custom 
    component for the search button. The component is rendered
    on the same row as the text field and the "Add" button, 
    after the "Add" button.</li>
    <li><code>readOnly</code>: use this facet to specify a custom 
    component for display a readonly version of the component.</li>
    <li><code>header</code>: use this facet to specify a header,
    rendered in a table row above the component.</li>
    <li><code>footer</code>: use this facet to specify a header,
    rendered in a table row below the component.</li>
    </ul>

    <h4>Client-side JavaScript functions</h4>

    <ul>
    <li>NONE yet</li> 
    </ul>

    <h4>Example</h4>
    
<pre>
        &lt;ui:editableList id="compid"
                         list="#{ListBean.list}" 
                         fieldLabel="#{msgs.textfield_label}"
                         listLabel="#{msgs.list_label}"
                         sorted="true" 
			 searchButton="true"
                         fieldValidator="#{ListBean.validateNewItem}"
                         listValidator="#{ListBean.validateList}"/&gt;

</pre>
 
      ]]></description>

  <component-family>com.sun.rave.web.ui.EditableList</component-family>

  <renderer-type>com.sun.rave.web.ui.EditableList</renderer-type>

  <attribute>
    <attribute-name>value</attribute-name>
    <attribute-extension>
      <is-hidden>true</is-hidden>
      <tag-attribute>false</tag-attribute>
    </attribute-extension>
  </attribute>

  <attribute>
    <attribute-name>immediate</attribute-name>
    <attribute-extension>
      <is-hidden>true</is-hidden>
      <tag-attribute>false</tag-attribute>
    </attribute-extension>
  </attribute>

  <attribute>
    <attribute-name>converter</attribute-name>
    <attribute-extension>
      <is-hidden>true</is-hidden>
      <tag-attribute>false</tag-attribute>
    </attribute-extension>
  </attribute>

  <attribute>
    <attribute-name>validator</attribute-name>
    <attribute-extension>
      <is-hidden>true</is-hidden>
      <tag-attribute>false</tag-attribute>
    </attribute-extension>
  </attribute>

  &visible-attrs;

  <renderer-extension>
    <tag-name>editableList</tag-name>
    <taglib-prefix>ui</taglib-prefix>
    <taglib-uri>http://www.sun.com/web/ui</taglib-uri>
  </renderer-extension>

</renderer>
