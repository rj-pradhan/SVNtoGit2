<?xml version="1.0" encoding="UTF-8"?>
<renderer>
  <description><![CDATA[

<p> Use the <code>ui:passwordField</code>  tag to create an input
    field where the characters entered are echoed back with a
    replacement character, so as to mask the input. </p> 

    <h3>HTML Elements and Layout</h3>

<p>The textField component renders an XHTML <code>&lt;input
    type="password"&gt;</code> element.</p>  

    <h3>Configuring the <code>ui:passwordField</code> Tag</h3>

<p>Use the <code>password</code> attribute to associate
the component with a model object that represents the current value,
by setting the attribute's value to an EL expression that corresponds
    to a property of a managed bean.</p>

    <p>To optionally specify a label for the component, use the
    <code>label</code> attribute, or specify a label facet. </p>

    <h3>Facets</h3>

    <ul>
    <li><code>label</code>: use this facet to specify a custom 
    component for the label.</li>
    <li><code>readOnly</code>: use this facet to specify a custom 
    component for displaying the value of this component when it is
    marked as readonly. The default is a <code>ui:staticText</code>. </li>

    </ul>

    <h3>Theme Identifiers</h3> 

    <p>The input element has a style class "TxtFld", or "TxtFldDis"
    when the field is disabled. If a label attribute is specified, the
    label element's class attribute is set to "LblLvl1Txt", "LblLvl2Txt" or
    "LblLvl3Txt" depending on the label level.</p> 


    <h3>Client-side JavaScript functions</h3>

    <p>In all the functions below, <code>&lt;id&gt;</code> should be
    the generated id of the PasswordField component. </p>

    <table cellpadding="2" cellspacing="2" border="1" 
           style="text-align: left; width: 100%;">
    <tbody>
    <tr>
    <td style="vertical-align">
    <code>field_setDisabled(&lt;id&gt;, &lt;disabled&gt;)</code>
    </td>
    <td style="vertical-align: top">
    Enable/disable the field. Set <code>&lt;disabled&gt;</code>
    to true to disable the component, or false to enable it.
    </td>
    </tr>
    <tr>
    <td style="vertical-align: top">
    <code>field_setValue(&lt;id&gt;, &lt;newValue&gt;)</code>
    </td>
    <td style="vertical-align: top">
    Set the value of the field to <code>&lt;newValue&gt;</code>.
    </td>
    </tr>
    <tr>
      <td style="vertical-align: top">
    <code>field_getValue(&lt;id&gt;)</code>
  </td>
    <td style="vertical-align: top">Get the value of the field.</td>
    </tr>
    <tr>
      <td style="vertical-align: top">
    <code>field_getInputElement(&lt;id&gt;)</code></td>
    <td style="vertical-align: top">
    Get hold of a reference to the input element rendered by this
    component.
    </td>
    </tr>
    <tr>
      <td style="vertical-align: top">
    <code>component_setVisible(&lt;id&gt;)</code>
  </td>
      <td style="vertical-align: top">Hide or show this component.
      </td>
    </tr>
  </tbody>
</table>

    <h3>Example</h3>

<p>This example uses a backing bean <code>User</code> with a
property <code>password</code>. The tag generates a label followed by
text input field. The required attribute is set to true, which causes
an icon to be rendered next to the label to indicate that the
application user must enter a value in the text field. The icon, label
  and input elements are enclosed by a span.</p>
<pre>
     &lt;ui:passwordField id="password" 
                       password="#{User.password}" 
                       label="Password:" 
                       required="true"/&gt;
</pre>
      ]]></description>

  <component-family>com.sun.rave.web.ui.PasswordField</component-family>

  <renderer-type>com.sun.rave.web.ui.PasswordField</renderer-type>

  <attribute>
    <description>
    Text value associated with this input field. This
attribute's value can be a string, or a JavaServer Faces EL expression
that resolves to a backing bean or a backing bean property. If the
value is a reference to a backing bean, the bean will be updated if
the user enters a new valid value in the field. 
        </description>
    <attribute-name>text</attribute-name>
  </attribute>

  <attribute>
    <description><![CDATA[The binding attribute is used to configure the
      component through Java code. This approach is intended for
      advanced uses, when the tag attributes cannot provide the
      desired output. The value of the binding attribute must be a
      JavaServer Faces EL expression that resolves to a backing bean,
      or to a backing bean property of type 
      <code>com.sun.rave.web.ui.component.PasswordField</code>. ]]>
        </description>
    <attribute-name>binding</attribute-name>
  </attribute>


  <attribute>
    <description>
Flag indicating that activation of this component by the user is not currently permitted.
        </description>
    <attribute-name>disabled</attribute-name>
  </attribute>

  <attribute>
    <description>
      Use the rendered attribute to indicate whether the HTML code for
      the component should be included in the rendered HTML page. If
      set to false, the rendered HTML page does not include the HTML
      for the component. If the component is not rendered, it is also
      not processed on any subsequent form submission. 
        </description>
    <attribute-name>rendered</attribute-name>
  </attribute>

  <attribute>
    <description>Flag indicating that event handling for this component should be handled immediately (in Apply Request Values phase) rather than waiting until Invoke Application phase.
        </description>
    <attribute-name>immediate</attribute-name>
  </attribute>

  <attribute>
    <description>
        If set, a label is rendered adjacent to the component with the
        value of this attribute as the label text. 
        </description>
    <attribute-name>label</attribute-name>
  </attribute>

  <attribute>
    <description>
      Position of this element in the tabbing order for the current
      document. The tabbing order determines the sequence in which
      elements receive focus when the tab key is pressed. The tabIndex
      value must be an integer between 0 and 32767.
        </description>
    <attribute-name>tabIndex</attribute-name>
  </attribute>

      <attribute>
        <attribute-name>value</attribute-name>
        <attribute-extension>
          <is-hidden>true</is-hidden>
          <tag-attribute>false</tag-attribute>
        </attribute-extension>
      </attribute>


      <attribute>
        <attribute-name>text</attribute-name>
        <attribute-extension>
          <is-hidden>true</is-hidden>
          <tag-attribute>false</tag-attribute>
        </attribute-extension>
      </attribute>

      &visible-attrs;
      &converter-props;
      &validator-props;

      <renderer-extension>
        <default-property-name>text</default-property-name>
        <instance-name>passwordField</instance-name>
        <is-container>true</is-container>
        <is-non-visual>false</is-non-visual>
        <tag-name>passwordField</tag-name>
        <taglib-prefix>ui</taglib-prefix>
        <taglib-uri>http://www.sun.com/web/ui</taglib-uri>
      </renderer-extension>

</renderer>
