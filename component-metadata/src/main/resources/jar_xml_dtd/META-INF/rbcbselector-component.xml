<?xml version="1.0" encoding="UTF-8"?>
<component>
  <description><![CDATA[<p>
      The <code>RbCbSelectorBase</code> class represents a base class
      for the <code>RbCbSelector</code> class, which is the super class 
      for the single radio button base class <code>RadioButtonBase</code>
      and the single checkbox base class <code>CheckboxBase</code>.
      Ultimately the super class for the <code>RadioButton</code> and
      <code>Checkbox</code> classes.
      <p>
      <h2>Facets</h2>
      <p>
      This class supports two optional facets.
      <ul>
      <li>image</li>
      <li>label</li>
      </ul>
      <p>
      If values are specified for either or both <code>imageURL</code>
      or <code>label</code> properties, an <code>ImageComponent</code> and
      <code>Label</code> component, respectively, may appear along with the
      checkbox control. Corresponding properties in the image and label
      components are assigned the values of the <code>imageURL</code>,
      <code>label</code> and <code>labelLevel</code> properties.
      </p>
      <p>
      The <code>ImageComponent</code> and <code>Label</code> components
      support several other properties. If these other properties must
      have specific values then, facets should be specified to assign
      the desired values to properties, not available as properties on the 
      <code>RbCbSelectorBase</code> component subclass.
      </p>
      <p>
      This class implements the following methods
      <h1><code>getConvertedValue</code></h1>
      It defers first to the renderer's <code>getConvertedValue</code>
      method. If there is no renderer to supply the converted value
      this method behaves as follows.
      <ul>
      <li>If the submitted value (the second argument), is <code>null</code>,
      return <code>null indicating the control is not selected.</li>
      <li>If the submitted value (the second argument), is not
      <code>null</code> and is of type <code>String</code> return the 
      the submitted value (the second argument). If the submitted value
      (the second argument), is of type <code>String[]</code> return the 
      the first element if it is not <code>null</code> or zero length,
      else return <code>null</code></li>
      <li>If the submitted value (the second argument) is not <code>null</code>
      or of type <code>String</code> or <code>String[]</code> call
      <code>ConversionUtilities.convertValueToObject</code> to give a
      registered converter the opportunity to covert the object.</li>
      </p>
      <h1><code>isChecked</code></h1>
      <p>
      This method implements the following algorithm.
      <ul>
      <li>If the <code>selectedValue</code> property is <code>null</code>,
      return <code>false</code>. By default, <code>selectedValue</code>
      will be a <code>Boolean</code> instance equal to true, if never
      assigned a value.</li>
      <li>If the <code>selectedValue</code> propery is not <code>null</code>
      and <code>getSelected</code> returns <code>null</code>, return
      <code>false</code>. If <code>getSelected</code> returns non
      <code>null</code>, effectively return
      <code>getSelected().equals(getSelectedValue())</code>.</li>
      </p>
    ]]></description>

  <display-name>RadioButtonBase and CheckboxBase super class</display-name>

  <component-type>com.sun.rave.web.ui.RbCbSelector</component-type>

  <component-class>com.sun.rave.web.ui.component.RbCbSelector</component-class>

  <facet>
    <description>&lt;p&gt;
	    The component, typically a
	    &lt;code&gt;com.sun.rave.web.ui.component.ImageComponent&lt;/code&gt; component 
	    that may appear with a checkbox or radio button.
	&lt;/p&gt;
	</description>
    <display-name>Control Image</display-name>
    <facet-name>image</facet-name>
  </facet>

  <facet>
    <description>&lt;p&gt;
	    The component, typically a
	    &lt;code&gt;com.sun.rave.web.ui.component.Label&lt;/code&gt; component
	    that may appear with a checkbox or radio button.
	    &lt;/p&gt;
	</description>
    <display-name>Control Label</display-name>
    <facet-name>label</facet-name>
  </facet>

  <property>
    <description>&lt;p&gt;
	    Identifies the control as participating as part
	    of a group. The &lt;code&gt;RadioButton&lt;/code&gt; and &lt;code&gt;Checkbox&lt;/code&gt;
	    classes determine the behavior of the group,
	    that are assigned the same value to the &lt;code&gt;name&lt;/code&gt;
	    property. The value of this property must be unique for components
	    in the group, within the scope of the &lt;code&gt;Form&lt;/code&gt; 
	    parent component containing the grouped components.
	    &lt;/p&gt;
	</description>
    <display-name>Group Name</display-name>
    <property-name>name</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
          Identifies the group of components to which this component belongs
      </short-description>
    </property-extension>
  </property>

  <property>
    <description>&lt;p&gt;
	    A context relative path of an image to be displayed with
	    the control. If you want to be able to specify attributes
	    for the image, specify an &lt;code&gt;image&lt;/code&gt; facet instead
	    of the &lt;code&gt;imageURL&lt;/code&gt; attribute.
	    &lt;/p&gt;
	</description>
    <display-name>Image URL</display-name>
    <property-name>imageURL</property-name>
    <property-class>java.lang.String</property-class>
    <property-extension>
      <is-bindable>true</is-bindable>
      <short-description>
          Resource path of an image used to appear in the component
      </short-description>
    </property-extension>
  </property>
  
  <property>
    <description>
             The object that represents the selections made from the
             available options. If multiple selections are allowed, this
             must be bound to ArrayList, an Object array, or an array of
             primitives.  
         </description>
    <display-name>Selected</display-name>
    <property-name>selected</property-name>
    <property-class>java.lang.Object</property-class>
    <property-extension>
      <alias-for>value</alias-for>
      <is-bindable>true</is-bindable>
      <short-description>The object that represents the selected value or values</short-description>
    </property-extension>
  </property>

  <property>
    <description>&lt;p&gt;
	    The value of the component when it is selected. The value of this
	    property is assigned to the &lt;code&gt;selected&lt;/code&gt; property when
	    the component is selected. The component is selected
	    when the &lt;code&gt;selected&lt;/code&gt; property is equal to this value.&lt;/br&gt;
	    This attribute can be bound to a &lt;code&gt;String&lt;/code&gt;, or &lt;code&gt;
	    Object&lt;/code&gt; value.&lt;/br&gt;
	    If this property is not assigned a value, the component behaves
	    as a boolean component. A boolean component
	    is selected when the &lt;code&gt;selected&lt;/code&gt; property is equal to a
	    true &lt;code&gt;Boolean&lt;/code&gt; instance.&lt;br&gt;
	    If a boolean component is not selected, the &lt;code&gt;selected&lt;/code&gt;
	    property value is a false &lt;code&gt;Boolean&lt;/code&gt; instance.
	    &lt;/p&gt;
	</description>
    <property-name>selectedValue</property-name>
    <property-class>Object</property-class>
    <property-extension>
      <alias-for>items</alias-for>
      <is-bindable>true</is-bindable>
      <short-description>
          Indicates the value of this component when it is selected. If no
          value is assigned, the component value is a Boolean
      </short-description>
    </property-extension>
  </property>

  <component-extension>
    <base-component-type>com.sun.rave.web.ui.Selector</base-component-type>
    <component-family>com.sun.rave.web.ui.RbCbSelector</component-family>
    <is-hidden>true</is-hidden>
    <renderer-type>com.sun.rave.web.ui.RbCbSelectorRenderer</renderer-type>
  </component-extension>

</component>
